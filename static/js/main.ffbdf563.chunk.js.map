{"version":3,"sources":["serviceWorker.js","components/SearchBar.js","components/VerseViewer.js","actions.js","components/Scroll.js","components/HtmlFrame.js","SubContentTexts.js","components/BackButton.js","links.js","App.js","reducers.js","index.js"],"names":["Boolean","window","location","hostname","match","SearchBar","searchField","searchChange","className","value","type","placeholder","onChange","VerseViewer","query","verses","book","chapter","length","start","verse","map","v","key","text","SearchActions","VersesActions","Scroll","props","id","style","children","HtmlFrame","dangerouslySetInnerHTML","__html","content","SubContentText","why","what","who","BackButton","href","links","icon","url","library","add","fab","connect","state","searchVerses","dispatch","onSearchChange","event","target","payload","setTimeout","axios","get","then","resp","data","catch","err","SubContentTexts","item","idx","initialStateSearch","lastChanged","undefined","initialStateVerses","now","Date","valueOf","rootReducers","combineReducers","action","spanSinceLastChange","searchFunc","store","createStore","applyMiddleware","thunkMiddleware","createLogger","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.ffbdf563.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\nimport './SearchBar.css'\r\n\r\nconst SearchBar = ({searchField, searchChange}) => {\r\n    return (\r\n        <div className='normal-text'>\r\n            <p>Type in the passage reference:</p>\r\n            <input \r\n                value={searchField}\r\n                type='search' \r\n                placeholder='e.g.: john 3:17'\r\n                onChange={searchChange}\r\n            />\r\n            <p className=\"explain\">Type the reference to a bible passage. The format\r\n                is <i>[book name] [chapter] : [verse] - [verse]</i>. \r\n                For example: <i>Acts 1:3-10</i>. You can also use \r\n                abbreviation of the book name like <i>Rev 5:5-10</i>, \r\n                where 'Rev' is short for 'Revelation'. To lookup for\r\n                a single verse then you don't have to state the ending verse,\r\n                for example: John 3:16.                \r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar","import React from 'react'\r\nimport './VerseViewer.css'\r\n\r\nconst VerseViewer = ({query, verses}) => {    \r\n    return query && query.book && query.chapter && verses && verses.length>0 ? (\r\n        <div className='bible-text'>            \r\n            <h1 className='f2'>{query ? `${query.book} ${query.chapter}` : ''}</h1>\r\n            <ol start={verses[0].verse}>\r\n            {\r\n                verses.map(v => (\r\n                    <li key={v.verse}>{v.text}</li>\r\n                ))\r\n            }\r\n            </ol>\r\n        </div>\r\n    ) : <div className='bible-text'>&nbsp;</div>\r\n}\r\n\r\nexport default VerseViewer;","import axios from 'axios'\r\n\r\nexport const SearchActions = {\r\n    CHANGE_SEARCHFIELD: 'CHANGE_SEARCHFIELD',\r\n    SEND_SEARCHFIELD: 'SEND_SEARCHFIELD'\r\n}\r\n\r\nexport const VersesActions = {\r\n    REQUEST_PENDING: 'REQUEST_PEDING',\r\n    REQUEST_SUCCESS: 'REQUEST_SUCCESS',\r\n    REQUEST_FAILED: 'REQUEST_FAILED',\r\n}\r\n\r\nexport const setSearchField = value => dispatch => {\r\n    dispatch( { type: SearchActions.CHANGE_SEARCHFIELD, payload: value } )\r\n    const throttleTimeInMsec = 1000\r\n    setTimeout(() => {\r\n        dispatch( { type: SearchActions.SEND_SEARCHFIELD } )\r\n    }, throttleTimeInMsec)    \r\n}\r\n\r\nexport const requestVerse = query => dispatch => {\r\n    if (!query.match(/(\\d?\\s?[a-z]{2,20})\\s+(\\d{1,3}):(\\d{1,3})-?(\\d{1,3})?/i)) return\r\n\r\n    dispatch({ type: VersesActions.REQUEST_PENDING })\r\n    axios\r\n        .get(`https://bible-verses-service.azurewebsites.net/verses/${query}`)\r\n        .then(resp => resp.data)\r\n        .then(payload => dispatch({ type: VersesActions.REQUEST_SUCCESS, payload }))\r\n        .catch(err => dispatch({type: VersesActions.REQUEST_FAILED, payload: err}))\r\n}","import React from 'react'\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div id={props.id} style={{ 'overflowX': 'hidden', 'overflowY': 'scroll'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Scroll","import React from 'react'\r\n\r\nconst HtmlFrame = (props) => (\r\n    <div dangerouslySetInnerHTML={{\r\n        __html: props.content\r\n      }}></div>\r\n)\r\n\r\nexport default HtmlFrame","const why = `\r\n<h2>Why Did I Build This Demo?</h2>\r\n<p>This demo demonstrates the use of Redux in React. Redux is a state management \r\n    that can be used in React project. I find React to be an easy framework to use. \r\n    Its learning curve is not to steep, but it can get very... very... advanced (thanks to the power\r\n    of open source 💪🏽). Nonetheless in every advantage there always be a disadvantage (Johan Cruyf),\r\n    while it's easy to create components in React, the states can go wild. Redux tame these wild\r\n    states by managing them in one single storage.\r\n</p>\r\n<p>The demo might be simple but it suffies to excercise simple states to more \r\n    complex asynchronous states using Thunk. I really enjoyed creating this demo.\r\n    I learnt a lot and I hope you can also take away something from it.\r\n</p>`\r\n\r\nconst what = `\r\n<h2>What Are Contained In This App?</h2>\r\n<p>\r\n<strong>Repo.</strong>\r\nPlease check out the source on <a target=\"_blank\" href=\"https://github.com/huferry/bible-search\">\r\n<img src=\"https://github.com/favicon.ico\">GitHub repository.<a/>\r\n</p>\r\n<p>\r\n<strong>Single-Page Application.</strong>\r\nA single-page application will loads the whole page at once. Any interaction from the\r\nwill create communcation from the browser and the server in the background. This will\r\nenhance the user experience by minimizing the re-loading waiting time and a smoother\r\ntransitions within the page. By the later, it's smoother since the page will not \r\nenterly reloaded and the user will not see the <i>reload button</i> of the browser\r\nreacting.\r\n<p>\r\n<strong>React/Redux.</strong>\r\nThe application is build using react framework, one of the most populair front-end\r\nframework in the year 2020. React makes adding custom components simple and almost\r\neffortless. However, when sharing states between components, it can get very nasty.\r\nRedux manages the states of the components within a single global store. This application\r\nmakes use the <i>connect</i> function from Redux which allows mapping states from the \r\nRedux' store as if they were the component's own properties. \r\n</p>\r\n<p>\r\n<strong>Functional Style React.</strong>\r\nAll React components in this application are constructed using functions in stead\r\nof components. I personally favor functions to classes, for its simplicity. Functions\r\njust have an output, without any override method, without constructor and with more managable\r\nbehaviours.\r\n</p>\r\n<p>\r\n<strong>Responsive CSS.</strong>\r\nThe layout is made responsive to the user's device. Try to open the page both\r\non the PC and a mobile device and you will see a slight difference between the\r\ntwo.\r\n</p>\r\n<p><strong>Azure Web Service.</strong>\r\nThe bible texts are provided by a web service that is deployed as an\r\nAzure web service. The source of this API can be found on this\r\n<a href=\"https://github.com/huferry/bible-api\"><img src=\"https://github.com/favicon.ico\">GitHub repository</a>.\r\n</p>\r\n<p>Test the API on your browser: <a href=\"https://bible-verses-service.azurewebsites.net/verses/acts%201:1\"><u>\r\nhttps://bible-verses-service.azurewebsites.net/verses/acts%201:1</u></a>\r\n</p>\r\n`\r\n\r\nconst who = `\r\n<h2>Who is Ferry?</h2>\r\n<p>My name is Ferry Utomo. You might wonder the origin of my surname. \r\nWhile it might sounds like Japanese, it is not. I was born on Java, so \r\npractically I'm a Javanese rather than a Japanese.\r\n</p>\r\n<p>I'm a full-stack developer, with also a passion for Scrum mastery. I find\r\nwriting code is exciting but growing a Scrum team is a fine challange for me. \r\nSome of my stacks I've experienced with: C# backend programming (framework, core),\r\nC# the old fashioned win forms for Windows, Delphi (desktop and backend programming),\r\nNodeJS, JavaScript front-end (React, Redux), HTML, CSS, Azure Web App, Azure \r\nCosmos DB, Azure Functions, MongoDB, Oracle (PL/SQL) and Flutter/Dart.\r\n</p>\r\n<p>I was born in the seventies and start programming when I was 14 years.\r\nI write code fluently in the good old Delphi 🤬, C# and JavaScript. \r\nSince the corona attack I trade my time I used to have to commute, two times 60km,\r\nby learning Dart/Flutter to create Android/iOS apps.\r\n</p>\r\n<p>Let's connect and get to know each other more! This is my <a target=\"_\" href=\"https://www.linkedin.com/in/heruutomo/\">LinkedIn</a> page.</p>`\r\n\r\nconst SubContentText = {why,what,who}\r\n\r\nexport default SubContentText","import React from 'react'\r\nimport './BackButton.css'\r\n\r\nconst BackButton = props => (\r\n    <div className=\"back-button\"><a href=\"#section1\">back</a></div>\r\n)\r\n\r\nexport default BackButton","const links = [\r\n    { \r\n      icon: ['fab', 'github'],\r\n      text: 'Frontend (this) Repository',\r\n      url: 'https://github.com/huferry/bible-search'\r\n    },\r\n    { \r\n      icon: ['fab', 'github'],\r\n      text: 'API Repository',\r\n      url: 'https://github.com/huferry/bible-api'\r\n    },\r\n    {\r\n      icon: ['fab', 'linkedin'],\r\n      text: 'Profile',\r\n      url: 'https://www.linkedin.com/in/heruutomo/'\r\n    },\r\n    {\r\n      icon: ['fab', 'instagram'],\r\n      text: 'Instagram',\r\n      url: 'https://www.instagram.com/huferry/'\r\n    },\r\n    {\r\n      icon: ['fab', 'twitter'],\r\n      text: 'Twitter',\r\n      url: 'https://twitter.com/huferry'\r\n    },\r\n    {\r\n      icon: ['fab', 'facebook'],\r\n      text: 'Facebook',\r\n      url: 'https://www.facebook.com/huferry/'\r\n    }\r\n  ]\r\n\r\n  export default links","import React from 'react';\r\nimport SearchBar from './components/SearchBar'\r\nimport VerseViewer from './components/VerseViewer'\r\nimport { connect } from 'react-redux'\r\nimport { setSearchField, requestVerse } from './actions'\r\nimport './App.css';\r\nimport Scroll from './components/Scroll';\r\nimport HtmlFrame from './components/HtmlFrame'\r\nimport SubContentTexts from './SubContentTexts'\r\nimport BackButton from './components/BackButton'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport links from './links'\r\n\r\nlibrary.add(fab)\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    searchField: state.searchVerses.searchField,\r\n    query: state.verses.query,\r\n    verses: state.verses.verses\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSearchChange: event => {\r\n      dispatch(setSearchField(event.target.value))\r\n      dispatch(requestVerse(event.target.value))\r\n    }\r\n  }\r\n}\r\n\r\nconst App = ({\r\n    onSearchChange, \r\n    searchField, \r\n    query, \r\n    verses\r\n   }) => {\r\n\r\n  return (\r\n    <div id=\"container\">\r\n      <div id=\"bg-section2\"></div>\r\n      <div id=\"section1\">\r\n        <h1 className='title'>Bible Lookup</h1>\r\n        <div>\r\n          <a href=\"#section3\">/DEMO/</a>\r\n          <a href=\"#section4\">/WHY/</a>\r\n          <a href=\"#section5\">/WHO/</a>\r\n          <a href=\"#section6\">/WHAT/</a>\r\n        </div>\r\n      </div>\r\n      <div id=\"section2\">\r\n        <span>Welcome to</span> <span>Bible Lookup</span>\r\n        <span id=\"section2-sub\">A Demonstration of React/Redux Project</span>\r\n      </div>\r\n      <div id=\"section3\">\r\n        <h2>Demo</h2>\r\n        <div id=\"demo-site\">\r\n          <SearchBar searchChange={onSearchChange} searchField={searchField} />\r\n          <Scroll id=\"viewer\">\r\n            <VerseViewer query={query} verses={verses} />\r\n          </Scroll>\r\n        </div>\r\n        <BackButton/>\r\n      </div>\r\n      <div id=\"section4\">\r\n        <HtmlFrame content={SubContentTexts.why} />\r\n        <BackButton/>\r\n      </div>\r\n      <div id=\"section5\">\r\n        <HtmlFrame content={SubContentTexts.who} />\r\n        <BackButton/>\r\n      </div>\r\n      <div id=\"section6\">\r\n        <HtmlFrame content={SubContentTexts.what} />\r\n        <BackButton/>\r\n      </div>\r\n      <div id=\"section7\">\r\n        {\r\n          links.map((item, idx) => {\r\n            return (<div key={idx}>\r\n              <FontAwesomeIcon icon={item.icon} />\r\n              <a href={item.url} > {item.text}</a>\r\n            </div>)\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { SearchActions, VersesActions } from './actions'\r\n\r\nconst initialStateSearch = {\r\n    searchField: '',\r\n    lastChanged: undefined\r\n}\r\n\r\nconst initialStateVerses = {\r\n    query: {},\r\n    verses: []\r\n}\r\n\r\nexport const now = () => (new Date()).valueOf()\r\n\r\nexport const searchVerses = (state=initialStateSearch, action={}) => {\r\n    switch(action.type) {\r\n        case SearchActions.CHANGE_SEARCHFIELD:\r\n            return {...state, ...{ searchField: action.payload, lastChanged: now() } }\r\n        case SearchActions.SEND_SEARCHFIELD: \r\n            const spanSinceLastChange = now() - state.lastChanged\r\n            if (spanSinceLastChange >= 1000 && state.searchFunc) {\r\n                state.searchFunc(state.searchField)\r\n            }\r\n            \r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const verses = (state=initialStateVerses, action={}) => {\r\n    switch(action.type) {\r\n        case VersesActions.REQUEST_PENDING:\r\n            return state\r\n\r\n        case VersesActions.REQUEST_SUCCESS:\r\n            return { \r\n                ...state, \r\n                ...{ \r\n                    verses: action.payload.verses, \r\n                    query: action.payload.query \r\n                }\r\n            }    \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { combineReducers, createStore, applyMiddleware } from 'redux'\r\nimport { Provider } from 'react-redux';\r\nimport { createLogger } from 'redux-logger'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport 'tachyons'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { searchVerses, verses } from './reducers'\r\n\r\n\r\nconst rootReducers = combineReducers({searchVerses, verses})\r\n\r\nconst store = createStore(rootReducers, applyMiddleware(thunkMiddleware, createLogger()))\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}